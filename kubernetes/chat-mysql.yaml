apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-mysql
spec:
  selector:
    matchLabels:
      app: chat-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: chat-mysql
    spec:
      containers:
      - image: mysql:5.7
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        - name: MYSQL_DATABASE
          value: chat
        - name: MYSQL_USER
          value: chatuser
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: mysql-initdb
        configMap:
          name: chat-mysql-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: chat-mysql
spec:
  ports:
  - port: 3306
  selector:
    app: chat-mysql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chat-mysql-initdb
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS chat;
    USE chat;
    
    CREATE TABLE IF NOT EXISTS messages (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(255) NOT NULL,
        message TEXT NOT NULL,
        timestamp DATETIME NOT NULL
    );
    
    -- Add some initial test messages
    INSERT INTO messages (username, message, timestamp) VALUES 
    ("System", "Welcome to the chat!", NOW());
